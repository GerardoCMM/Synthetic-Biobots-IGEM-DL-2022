flattenedFile = "./Transcripts/genome_flattened_2.gff"
sampleTable <- data.frame(condition = factor(c(rep("fruit_20d",3),rep("fruit_40d",3),rep("leaf",3),rep("panicle",3))))
dxd = DEXSeqDataSetFromHTSeq(
countFiles,
sampleData=sampleTable,
design= ~ sample + exon + condition:exon,
flattenedfile=flattenedFile )
genesForSubset = c(rownames(difInf40Counts),"Pn3.4770")
dxd = dxd[geneIDs( dxd ) %in% genesForSubset,]
dxd = estimateSizeFactors( dxd )
dxd = estimateDispersions( dxd )
plotDispEsts( dxd )
dxd = testForDEU( dxd )
dxd = estimateExonFoldChanges( dxd, fitExpToVar="condition")
dxr1 = DEXSeqResults( dxd )
table ( dxr1$padj < 0.05 )
table ( tapply( dxr1$padj < 0.1, dxr1$groupID, any ) )
plotMA( dxr1, cex=0.8 )
plotDEXSeq( dxr1, "Pn16.1237", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn16.1237", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn16.1237", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn2.2377", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn16.1237", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
View(dxr1)
dfdxr1 = as.data.frame(dxr1)
View(dfdxr1)
sampleTable$condition
levels(sampleTable$condition)
sampleTable <- data.frame(condition = factor(c(rep("fruit_20d",3),rep("fruit_40d",3),rep("leaf",3),rep("panicle",3))))
sampleTable$condition <- relevel(sampleTable$condition,ref="fruit_40d")
levels(sampleTable$condition)
dxd = DEXSeqDataSetFromHTSeq(
countFiles,
sampleData=sampleTable,
design= ~ sample + exon + condition:exon,
flattenedfile=flattenedFile )
genesForSubset = c(rownames(difInf40Counts),"Pn3.4770")
dxd = dxd[geneIDs( dxd ) %in% genesForSubset,]
dxd = estimateSizeFactors( dxd )
dxd = estimateDispersions( dxd )
plotDispEsts( dxd )
dxd = testForDEU( dxd )
dxd = estimateExonFoldChanges( dxd, fitExpToVar="condition")
dxr1 = DEXSeqResults( dxd )
dfdxr1 = as.data.frame(dxr1)
View(dfdxr1)
table ( dxr1$padj < 0.05 )
table ( tapply( dxr1$padj < 0.1, dxr1$groupID, any ) )
plotMA( dxr1, cex=0.8 )
plotDEXSeq( dxr1, "Pn16.1237", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn16.1237", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn16.1237", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn16.1237", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn16.1237", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn16.1237", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
setwd("/home/gerardo/Documentos/Gera/SyntheticBiobots/2022/Metods/Exon_usage")
library("DEXSeq")
View(dfdxr1)
plotDEXSeq( dxr1, "Pn3.4770", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn3.4770", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn3.4770", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
setwd("/home/gerardo/Documentos/Gera/SyntheticBiobots/2022/Metods/Exon_usage")
library("DEXSeq")
countFiles <- c('./ERR4099794.tabular',
'./ERR4099795.tabular',
'./ERR4099796.tabular',
'./ERR4099797.tabular',
'./ERR4099798.tabular',
'./ERR4099799.tabular',
'./ERR4099800.tabular',
'./ERR4099801.tabular',
'./ERR4099802.tabular',
'./ERR4099803.tabular',
'./ERR4099804.tabular',
'./ERR4099805.tabular')
flattenedFile = "./Transcripts/genome_flattened_2.gff"
sampleTable <- data.frame(condition = factor(c(rep("fruit_20d",3),rep("fruit_40d",3),rep("leaf",3),rep("panicle",3))))
sampleTable$condition <- relevel(sampleTable$condition,ref="fruit_40d")
dxd = DEXSeqDataSetFromHTSeq(
countFiles,
sampleData=sampleTable,
design= ~ sample + exon + condition:exon,
flattenedfile=flattenedFile )
genesForSubset = c(rownames(difInf40Counts),"Pn3.4770")
dxd = dxd[geneIDs( dxd ) %in% genesForSubset,]
dxd = estimateSizeFactors( dxd )
dxd = estimateDispersions( dxd )
plotDispEsts( dxd )
dxd = testForDEU( dxd )
dxd = estimateExonFoldChanges( dxd, fitExpToVar="condition")
dxr1 = DEXSeqResults( dxd )
dfdxr1 = as.data.frame(dxr1)
table ( dxr1$padj < 0.05 )
table ( tapply( dxr1$padj < 0.1, dxr1$groupID, any ) )
plotMA( dxr1, cex=0.8 )
plotDEXSeq( dxr1, "Pn16.1237", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn16.1237", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn16.1237", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn2.2377", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn2.2377", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn2.2377", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn45.43", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn45.43", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn45.43", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn3.4770", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn3.4770", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn3.4770", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDispEsts( dxd )
plotMA( dxr1, cex=0.8 )
plotDEXSeq( dxr1, "Pn3.4770", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn3.4770", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn3.4770", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
View(dfdxr1)
#####
plotDEXSeq( dxr1, "Pn3.4770", norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
#####
plotDEXSeq( dxr1, "Pn3.4770", splicing = TRUE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn3.4770", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
#####
plotDEXSeq( dxr1, "Pn3.4770", splicing = TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn45.43", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn45.43", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn45.43", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn45.43", splicing = TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn2.2377", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn2.2377", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn2.2377", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn2.2377", splicing = TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
View(dfdxr1)
plotDEXSeq( dxr1, "Pn16.1237", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn16.1237", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn16.1237", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn16.1237", splicing = TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn3.4770", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn3.4770", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn3.4770", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn3.4770", splicing = TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn3.4770", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn3.4770", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn3.4770", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
View(dfdxr1)
View(txi_output)
_sampleInfo <- dfdxr1[dfdxr1$groupID=="Pn3.4770",]
f_sampleInfo <- dfdxr1[dfdxr1$groupID=="Pn3.4770",]
View(f_sampleInfo)
f_sampleInfo <- dfdxr1[dfdxr1$groupID=="Pn3.4770",20:31]
_sampleTable <- data.frame(condition = factor(c(rep("fruit_20d",3),rep("fruit_40d",3),rep("leaf",3),rep("panicle",3))))
f_sampleTable <- data.frame(condition = factor(c(rep("fruit_20d",3),rep("fruit_40d",3),rep("leaf",3),rep("panicle",3))))
f_coldata <- f_sampleTable
f_coldata$condition <- relevel(f_coldata$condition,ref="fruit_40d")
View(f_coldata)
View(f_coldata)
colnames(f_sampleInfo) <- f_coldata$condition
dds <- DESeqDataSetFromMatrix(countData = f_sampleInfo,
colData = coldata,
design= ~ condition)
_dds <- DESeqDataSetFromMatrix(countData = f_sampleInfo,
colData = coldata,
design= ~ condition)
colnames(f_sampleInfo) <- f_coldata$condition
f_dds <- DESeqDataSetFromMatrix(countData = f_sampleInfo,
colData = coldata,
design= ~ condition)
dds <- DESeqDataSetFromTximport(txi = txi_output,
colData = coldata,
design= ~ condition)
f_dds <- DESeq(dds)
f_dds <- DESeq(f_dds)
f_resultados <- as.data.frame(results(f_dds))
View(f_resultados)
f_dds <- DESeqDataSetFromMatrix(countData = f_sampleInfo,
colData = coldata,
design= ~ condition)
f_dds <- DESeq(f_dds)
f_resultados <- as.data.frame(results(f_dds))
k
PD
View(sampleCor)
PieDonut(PD, aes(Cluster, GO.Molecular.Functions, count=n), title = "GO Molecular function of diferentially genes")
library(webr)
PieDonut(PD, aes(Cluster, GO.Molecular.Functions, count=n), title = "GO Molecular function of diferentially genes")
library(ggplot2)
PieDonut(PD, aes(Cluster, GO.Molecular.Functions, count=n), title = "GO Molecular function of diferentially genes")
pwd()
wd()
getwd()
setwd("../Exon_usage")
getwd()
genesForSubset = c(rownames(difInf40Counts),"Pn3.4770", "Pn8.2617") # Using only differentially expressed genes and genes of importance for the pathway
dxd = dxd[geneIDs( dxd ) %in% genesForSubset,]
dxd = estimateSizeFactors( dxd )
dxd = estimateDispersions( dxd )
plotDispEsts( dxd )
dxd = testForDEU( dxd ) # Test for diferential exon usage
dxd = estimateExonFoldChanges( dxd, fitExpToVar="condition")
dxr1 = DEXSeqResults( dxd )
dfdxr1 = as.data.frame(dxr1)
table ( dxr1$padj < 0.05 )
table ( tapply( dxr1$padj < 0.1, dxr1$groupID, any ) )
table ( tapply( dxr1$padj < 0.05, dxr1$groupID, any ) )
plotMA( dxr1, cex=0.8 )
table ( dxr1$padj < 0.05 ) # How many exonic regions are significant
table ( tapply( dxr1$padj < 0.05, dxr1$groupID, any ) ) # How many genes are significant
plotMA( dxr1, cex=0.8 )
numbOfGenes <- sum( perGeneQValue(dxr) < 0.05)
numbOfGenes <- sum( perGeneQValue(dxr1) < 0.05)
numbOfGenes
plotMA( dxr1, FDR=0.05)
plotMA( dxr1, cex = 0.8, FDR=0.05)
plotMA( dxr1, cex = 0.8)
plotDispEsts( dxd )
plotMA( dxr1, cex = 0.8)
plotMA( dxr1, cex = 0.8, p = 0.05)
plotMA( dxr1, cex = 0.8, pvalue = 0.05)
table ( dxr1$padj < 0.1 ) # How many exonic regions are significant
table ( tapply( dxr1$padj < 0.1, dxr1$groupID, any ) ) # How many genes are significant
numbOfGenes <- sum( perGeneQValue(dxr1) < 0.1) # Number of genes with at least one differentially used exon (False discovery rate == 0.05)
numbOfGenes
plotMA( dxr1, cex = 0.8)
plotMA( dxr1, cex = 0.8, col="green")
plotMA( dxr1, cex = 0.8)
View(dfdxr1)
max(dfdxr1$exonBaseMean)
dxr1 = DEXSeqResults( dxd ) # Obtaining results
dfdxr1 = as.data.frame(dxr1) # Conversion to data.frame
View(dfdxr1)
plotMA( dxr1, cex = 1)
plotMA( dxr1, cex = 1, colNonSig = "blue")
plotMA( dxr1, cex = 1, colNonSig = "cyan")
plotMA( dxr1, cex = 1, colNonSig = "cyan3")
plotDispEsts( dxd ) # Plot dispersions
plotDispEsts( dxd, cex = 1) # Plot dispersions
plotDEXSeq( dxr1, "Pn8.2617", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
View(dfdxr1)
genesForSubset = c(rownames(difInf40Counts), "Pn8.2617","Pn3.4770") # Using only differentially expressed genes and genes of importance for the pathway
dxd = DEXSeqDataSetFromHTSeq(
countFiles,
sampleData=sampleTable,
design= ~ sample + exon + condition:exon,
flattenedfile=flattenedFile ) # Loading files and experimental design
genesForSubset = c(rownames(difInf40Counts), "Pn8.2617","Pn3.4770") # Using only differentially expressed genes and genes of importance for the pathway
dxd = dxd[geneIDs( dxd ) %in% genesForSubset,]
dxd = estimateSizeFactors( dxd ) # Normalisation
dxd = estimateDispersions( dxd ) # Dispersion estimation
plotDispEsts( dxd, cex = 1) # Plot dispersions
dxd = testForDEU( dxd ) # Test for diferential exon usage
dxd = estimateExonFoldChanges( dxd, fitExpToVar="condition") # Exon usage fold changes
dxr1 = DEXSeqResults( dxd ) # Obtaining results
dfdxr1 = as.data.frame(dxr1) # Conversion to data.frame
table ( dxr1$padj < 0.1 ) # How many exonic regions are significant
table ( tapply( dxr1$padj < 0.1, dxr1$groupID, any ) ) # How many genes are significant
numbOfGenes <- sum( perGeneQValue(dxr1) < 0.1) # Number of genes with at least one differentially used exon (False discovery rate == 0.05)
numbOfGenes
plotMA( dxr1, cex = 1, colNonSig = "cyan3") # Plotting mean expression of exonic part, log 2 fold change and significance (FDR = 0.1)
plotDEXSeq( dxr1, "Pn8.2617", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn8.2617", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn8.2617", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn8.2617", splicing = TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn8.2617", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 5
plotDEXSeq( dxr1, "Pn8.2617", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 )
plotDEXSeq( dxr1, "Pn8.2617", splicing = TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 6 Expression and exon usage
plotDEXSeq( dxr1, "Pn3.4770", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 1 Expression
plotDEXSeq( dxr1, "Pn3.4770", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 2 Expression with transcripts
plotDEXSeq( dxr1, "Pn3.4770", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 3 Normalized counts
plotDEXSeq( dxr1, "Pn3.4770", splicing = TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 4 Exon usage
plotDEXSeq( dxr1, "Pn3.4770", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 5 Exon usage with transcripts
plotDEXSeq( dxr1, "Pn3.4770", splicing = TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 6 Expression and exon usage
plotDEXSeq( dxr1, "Pn3.4770", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 7 Expression and exon usage with transcripts
extra = ("Pn8.2617", "Pn2.84", "Pn3.4770")
extra = ("Pn8.2617", "Pn2.84", "Pn3.4770")
extra = ("Pn8.2617", "Pn2.84", "Pn3.4770")
extra = c("Pn8.2617", "Pn2.84", "Pn3.4770")
genesForSubset = c(rownames(difInf40Counts), extra) # Using only differentially expressed genes and genes of importance for the pathway
dxd = dxd[geneIDs( dxd ) %in% genesForSubset,]
dxd = DEXSeqDataSetFromHTSeq(
countFiles,
sampleData=sampleTable,
design= ~ sample + exon + condition:exon,
flattenedfile=flattenedFile ) # Loading files and experimental design
setwd("../Exon_usage") # Moving to Exon_usage directory
library("DEXSeq") # Loading DEXSeq library
countFiles <- c('./ERR4099794.tabular',
'./ERR4099795.tabular',
'./ERR4099796.tabular',
'./ERR4099797.tabular',
'./ERR4099798.tabular',
'./ERR4099799.tabular',
'./ERR4099800.tabular',
'./ERR4099801.tabular',
'./ERR4099802.tabular',
'./ERR4099803.tabular',
'./ERR4099804.tabular',
'./ERR4099805.tabular') # Files with counts for every exon of every gene
flattenedFile = "./Transcripts/genome_flattened_2.gff" # This file includes all the know transcripts for the proteins previously know
sampleTable <- data.frame(condition = factor(c(rep("fruit_20d",3),rep("fruit_40d",3),rep("leaf",3),rep("panicle",3))))
sampleTable$condition <- relevel(sampleTable$condition,ref="fruit_40d") # Using fruit at 40 days stage as reference
dxd = DEXSeqDataSetFromHTSeq(
countFiles,
sampleData=sampleTable,
design= ~ sample + exon + condition:exon,
flattenedfile=flattenedFile ) # Loading files and experimental design
extra = c("Pn8.2617", "Pn2.84", "Pn3.4770")
genesForSubset = c(rownames(difInf40Counts), extra) # Using only differentially expressed genes and genes of importance for the pathway
dxd = dxd[geneIDs( dxd ) %in% genesForSubset,]
dxd = estimateSizeFactors( dxd ) # Normalisation
dxd = estimateDispersions( dxd ) # Dispersion estimation
plotDispEsts( dxd, cex = 1) # Plot dispersions
dxd = testForDEU( dxd ) # Test for diferential exon usage
dxd = estimateExonFoldChanges( dxd, fitExpToVar="condition") # Exon usage fold changes
dxr1 = DEXSeqResults( dxd ) # Obtaining results
dfdxr1 = as.data.frame(dxr1) # Conversion to data.frame
table ( dxr1$padj < 0.1 ) # How many exonic regions are significant
table ( tapply( dxr1$padj < 0.1, dxr1$groupID, any ) ) # How many genes are significant
numbOfGenes <- sum( perGeneQValue(dxr1) < 0.1) # Number of genes with at least one differentially used exon (False discovery rate == 0.05)
plotMA( dxr1, cex = 1, colNonSig = "cyan3") # Plotting mean expression of exonic part, log 2 fold change and significance (FDR = 0.1)
plotDEXSeq( dxr1, "Pn2.84", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 1 Expression
plotDEXSeq( dxr1, "Pn2.84", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 2 Expression with transcripts
plotDEXSeq( dxr1, "Pn2.84", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 3 Normalized counts
plotDEXSeq( dxr1, "Pn2.84", splicing = TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 4 Exon usage
plotDEXSeq( dxr1, "Pn2.84", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 5 Exon usage with transcripts
plotDEXSeq( dxr1, "Pn2.84", splicing = TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 6 Expression and exon usage
plotDEXSeq( dxr1, "Pn2.84", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 7 Expression and exon usage with transcripts
extra = c("Pn8.2617", "Pn2.84", "Pn1.1317", "Pn3.4770", "Pn16.1237",
"Pn4.3222", "Pn2.2377", "Pn12.1813")
dxd = DEXSeqDataSetFromHTSeq(
countFiles,
sampleData=sampleTable,
design= ~ sample + exon + condition:exon,
flattenedfile=flattenedFile ) # Loading files and experimental design
extra = c("Pn8.2617", "Pn2.84", "Pn1.1317", "Pn3.4770", "Pn16.1237",
"Pn4.3222", "Pn2.2377", "Pn12.1813")
genesForSubset = c(rownames(difInf40Counts), extra) # Using only differentially expressed genes and genes of importance for the pathway
dxd = dxd[geneIDs( dxd ) %in% genesForSubset,]
dxd = estimateSizeFactors( dxd ) # Normalisation
dxd = estimateDispersions( dxd ) # Dispersion estimation
plotDispEsts( dxd, cex = 1) # Plot dispersions
dxd = testForDEU( dxd ) # Test for diferential exon usage
dxd = estimateExonFoldChanges( dxd, fitExpToVar="condition") # Exon usage fold changes
dxr1 = DEXSeqResults( dxd ) # Obtaining results
dfdxr1 = as.data.frame(dxr1) # Conversion to data.frame
table ( dxr1$padj < 0.1 ) # How many exonic regions are significant
table ( tapply( dxr1$padj < 0.1, dxr1$groupID, any ) ) # How many genes are significant
numbOfGenes <- sum( perGeneQValue(dxr1) < 0.1) # Number of genes with at least one differentially used exon (False discovery rate == 0.05)
plotMA( dxr1, cex = 1, colNonSig = "cyan3") # Plotting mean expression of exonic part, log 2 fold change and significance (FDR = 0.1)
plotDEXSeq( dxr1, "Pn2.84", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 1 Expression
plotDEXSeq( dxr1, "Pn2.84", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 2 Expression with transcripts
plotDEXSeq( dxr1, "Pn1.1317", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 1 Expression
plotDEXSeq( dxr1, "Pn1.1317", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 2 Expression with transcripts
plotDEXSeq( dxr1, "Pn1.1317", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 3 Normalized counts
plotDEXSeq( dxr1, "Pn1.1317", splicing = TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 4 Exon usage
plotDEXSeq( dxr1, "Pn1.1317", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 5 Exon usage with transcripts
plotDEXSeq( dxr1, "Pn1.1317", splicing = TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 6 Expression and exon usage
plotDEXSeq( dxr1, "Pn1.1317", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 7 Expression and exon usage with transcripts
plotDEXSeq( dxr1, "Pn16.1237", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 1 Expression
plotDEXSeq( dxr1, "Pn16.1237", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 2 Expression with transcripts
plotDEXSeq( dxr1, "Pn16.1237", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 3 Normalized counts
plotDEXSeq( dxr1, "Pn16.1237", splicing = TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 4 Exon usage
plotDEXSeq( dxr1, "Pn16.1237", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 5 Exon usage with transcripts
plotDEXSeq( dxr1, "Pn16.1237", splicing = TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 6 Expression and exon usage
plotDEXSeq( dxr1, "Pn16.1237", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 7 Expression and exon usage with transcripts
plotDEXSeq( dxr1, "Pn1.1178", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 1 Expression
extra = c("Pn8.2617", "Pn2.84", "Pn1.1317", "Pn3.4770", "Pn16.1237",
"Pn4.3222", "Pn2.2377", "Pn12.1813","Pn1.1178", "Pn16.1198")
dxd = DEXSeqDataSetFromHTSeq(
countFiles,
sampleData=sampleTable,
design= ~ sample + exon + condition:exon,
flattenedfile=flattenedFile ) # Loading files and experimental design
setwd("../Exon_usage") # Moving to Exon_usage directory
library("DEXSeq") # Loading DEXSeq library
countFiles <- c('./ERR4099794.tabular',
'./ERR4099795.tabular',
'./ERR4099796.tabular',
'./ERR4099797.tabular',
'./ERR4099798.tabular',
'./ERR4099799.tabular',
'./ERR4099800.tabular',
'./ERR4099801.tabular',
'./ERR4099802.tabular',
'./ERR4099803.tabular',
'./ERR4099804.tabular',
'./ERR4099805.tabular') # Files with counts for every exon of every gene
flattenedFile = "./Transcripts/genome_flattened_2.gff" # This file includes all the know transcripts for the proteins previously know
sampleTable <- data.frame(condition = factor(c(rep("fruit_20d",3),rep("fruit_40d",3),rep("leaf",3),rep("panicle",3))))
sampleTable$condition <- relevel(sampleTable$condition,ref="fruit_40d") # Using fruit at 40 days stage as reference
dxd = DEXSeqDataSetFromHTSeq(
countFiles,
sampleData=sampleTable,
design= ~ sample + exon + condition:exon,
flattenedfile=flattenedFile ) # Loading files and experimental design
extra = c("Pn8.2617", "Pn2.84", "Pn1.1317", "Pn3.4770", "Pn16.1237",
"Pn4.3222", "Pn2.2377", "Pn12.1813","Pn1.1178", "Pn16.1198")
genesForSubset = c(rownames(difInf40Counts), extra) # Using only differentially expressed genes and genes of importance for the pathway
dxd = dxd[geneIDs( dxd ) %in% genesForSubset,]
dxd = estimateSizeFactors( dxd ) # Normalisation
dxd = estimateDispersions( dxd ) # Dispersion estimation
dxd = testForDEU( dxd ) # Test for diferential exon usage
dxd = estimateExonFoldChanges( dxd, fitExpToVar="condition") # Exon usage fold changes
dxr1 = DEXSeqResults( dxd ) # Obtaining results
dfdxr1 = as.data.frame(dxr1) # Conversion to data.frame
table ( dxr1$padj < 0.1 ) # How many exonic regions are significant
table ( tapply( dxr1$padj < 0.1, dxr1$groupID, any ) ) # How many genes are significant
numbOfGenes <- sum( perGeneQValue(dxr1) < 0.1) # Number of genes with at least one differentially used exon (False discovery rate == 0.05)
plotDEXSeq( dxr1, "Pn1.1178", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 1 Expression
plotDEXSeq( dxr1, "Pn1.1178", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 2 Expression with transcripts
plotDEXSeq( dxr1, "Pn1.1178", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 3 Normalized counts
plotDEXSeq( dxr1, "Pn1.1178", splicing = TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 4 Exon usage
plotDEXSeq( dxr1, "Pn1.1178", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 5 Exon usage with transcripts
plotDEXSeq( dxr1, "Pn1.1178", splicing = TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 6 Expression and exon usage
plotDEXSeq( dxr1, "Pn1.1178", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 7 Expression and exon usage with transcripts
plotDEXSeq( dxr1, "Pn4.3222", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 1 Expression
plotDEXSeq( dxr1, "Pn4.3222", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 2 Expression with transcripts
plotDEXSeq( dxr1, "Pn4.3222", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 3 Normalized counts
plotDEXSeq( dxr1, "Pn4.3222", splicing = TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 4 Exon usage
plotDEXSeq( dxr1, "Pn4.3222", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 5 Exon usage with transcripts
plotDEXSeq( dxr1, "Pn4.3222", splicing = TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 6 Expression and exon usage
plotDEXSeq( dxr1, "Pn4.3222", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 7 Expression and exon usage with transcripts
plotDEXSeq( dxr1, "Pn2.2377", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 1 Expression
plotDEXSeq( dxr1, "Pn2.2377", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 2 Expression with transcripts
plotDEXSeq( dxr1, "Pn2.2377", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 3 Normalized counts
plotDEXSeq( dxr1, "Pn2.2377", splicing = TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 4 Exon usage
plotDEXSeq( dxr1, "Pn2.2377", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 5 Exon usage with transcripts
plotDEXSeq( dxr1, "Pn2.2377", splicing = TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 6 Expression and exon usage
plotDEXSeq( dxr1, "Pn2.2377", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 7 Expression and exon usage with transcripts
plotDEXSeq( dxr1, "Pn1.1178", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 1 Expression
plotDEXSeq( dxr1, "Pn1.1178", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 2 Expression with transcripts
plotDEXSeq( dxr1, "Pn1.1178", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 3 Normalized counts
plotDEXSeq( dxr1, "Pn1.1178", splicing = TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 4 Exon usage
plotDEXSeq( dxr1, "Pn1.1178", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 5 Exon usage with transcripts
plotDEXSeq( dxr1, "Pn1.1178", splicing = TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 6 Expression and exon usage
plotDEXSeq( dxr1, "Pn1.1178", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 7 Expression and exon usage with transcripts
plotDEXSeq( dxr1, "Pn16.1198", legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 1 Expression
plotDEXSeq( dxr1, "Pn16.1198", displayTranscripts=TRUE, legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 2 Expression with transcripts
plotDEXSeq( dxr1, "Pn16.1198", expression=FALSE, norCounts=TRUE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 3 Normalized counts
plotDEXSeq( dxr1, "Pn16.1198", splicing = TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 4 Exon usage
plotDEXSeq( dxr1, "Pn16.1198", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,expression=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 5 Exon usage with transcripts
plotDEXSeq( dxr1, "Pn16.1198", splicing = TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 6 Expression and exon usage
plotDEXSeq( dxr1, "Pn16.1198", splicing = TRUE, displayTranscripts=TRUE, norCounts=FALSE,
legend=TRUE, cex.axis=1.2, cex=1.3, lwd=2 ) # 7 Expression and exon usage with transcripts
